"use strict";(self.webpackChunkespresso=self.webpackChunkespresso||[]).push([[872],{5034:function(e,t,n){n.r(t),n.d(t,{assets:function(){return h},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return d}});var o=n(7462),s=n(3366),a=n(7294),i=n(3905),r=n(4578),l=function(e){function t(t){var n;return(n=e.call(this,t)||this).handleChange=function(e){n.setState({ang:e.target.value})},n.handleCopy=function(){var e=(parseFloat(n.state.ang)/.529177249).toFixed(10);n.setState({showCopied:!0}),setTimeout((function(){n.setState({showCopied:!1})}),1500),navigator.clipboard.writeText(e)},n.state={ang:1,showCopied:!1},n}return(0,r.Z)(t,e),t.prototype.render=function(){var e=(parseFloat(this.state.ang)/.529177249).toFixed(10);return a.createElement(a.Fragment,null,a.createElement("p",null,a.createElement("input",{className:"appInput",type:"number",step:"0.01",value:this.state.ang,onChange:this.handleChange}),"\xa0\u212b\xa0= ",a.createElement("span",{className:"appOutput"},e),"\xa0Bohr.\u2002",a.createElement("button",{className:"appBtn",onClick:this.handleCopy},this.state.showCopied?"Copied":"Copy")))},t}(a.Component),u=["components"],p={title:"Density Functional Theory using Quantum Espresso",sidebar_label:"Welcome",slug:"/",keywords:["DFT","first principles calculation","Angstrom to Bohr converter","Angstrom to Bohr conversion"]},c=void 0,m={unversionedId:"welcome",id:"welcome",title:"Density Functional Theory using Quantum Espresso",description:"This tutorial is result of my personal notes while trying (which I still do) to",source:"@site/docs/welcome.mdx",sourceDirName:".",slug:"/",permalink:"/espresso/",draft:!1,editUrl:"https://github.com/pranabdas/espresso/blob/main/docs/welcome.mdx",tags:[],version:"current",frontMatter:{title:"Density Functional Theory using Quantum Espresso",sidebar_label:"Welcome",slug:"/",keywords:["DFT","first principles calculation","Angstrom to Bohr converter","Angstrom to Bohr conversion"]},sidebar:"docs",next:{title:"Setup",permalink:"/espresso/category/setup"}},h={},d=[{value:"Filename conventions",id:"filename-conventions",level:2},{value:"Unit conversions",id:"unit-conversions",level:2}],f={toc:d},g="wrapper";function y(e){var t=e.components,n=(0,s.Z)(e,u);return(0,i.kt)(g,(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This tutorial is result of my personal notes while trying (which I still do) to\nlearn Density Functional Theory calculations myself. I am no expert in this\nsubject. I am sharing this notes here, just in case it helps you getting\nstarted. I will cite numerous other resources that I am following. Hope you will\nfind this tutorial helpful."),(0,i.kt)("p",null,"The quantum espresso input files, jupyter notebooks (containing python code for\nvisualizations), and other source files related to this tutorial can be found on\nGitHub: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pranabdas/espresso/"},"pranabdas/espresso"),". You may clone\nthe repository to your local machine:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/pranabdas/espresso.git\n")),(0,i.kt)("h2",{id:"filename-conventions"},"Filename conventions"),(0,i.kt)("p",null,"Lately, I decided to follow specific pattern for the filenames, but you can\nchoose whatever works best for you. Note that all example files in this\ntutorial does not follow this convention yet."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"{program}.{calculation}.{system}.{in, out}\n{program}.{calculation}.{system_description}.{in, out}\n{pw, pp, ...}.{scf, bands, ...}.{silicon, al_slab}.{in, out}\n")),(0,i.kt)("p",null,"Example: ",(0,i.kt)("em",{parentName:"p"},"pw.bands.silicon.in")," \u2192 ",(0,i.kt)("em",{parentName:"p"},"input")," file for the ",(0,i.kt)("em",{parentName:"p"},"bands")," calculation using\n",(0,i.kt)("em",{parentName:"p"},"PWscf")," program for ",(0,i.kt)("em",{parentName:"p"},"silicon"),"."),(0,i.kt)("p",null,"For PWTK scripts, we will use ",(0,i.kt)("inlineCode",{parentName:"p"},".pwtk")," extension (e.g., ",(0,i.kt)("em",{parentName:"p"},"silicon_vc_relax.pwtk"),")."),(0,i.kt)("h2",{id:"unit-conversions"},"Unit conversions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1 Bohr = 0.529177249 \xc5"),(0,i.kt)("li",{parentName:"ul"},"1 Rydberg (Ry) = 13.6056981 eV.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Angstrom to Bohr converter:")," lattice constants are often provided in\nangstrom, you can use following utility to convert to Bohr."),(0,i.kt)(l,{mdxType:"AngToBohr"}))}y.isMDXComponent=!0}}]);