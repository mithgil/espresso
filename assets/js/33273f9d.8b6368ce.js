"use strict";(self.webpackChunkespresso=self.webpackChunkespresso||[]).push([[614],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=a,m=p["".concat(c,".").concat(d)]||p[d]||f[d]||o;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5875:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={title:"Bandstructure of GaAs",sidebar_label:"GaAs"},c=void 0,l={unversionedId:"hands-on/GaAs",id:"hands-on/GaAs",title:"Bandstructure of GaAs",description:"Now that we have calculated the bandstructure of silicon (semiconductor) and",source:"@site/docs/hands-on/GaAs.md",sourceDirName:"hands-on",slug:"/hands-on/GaAs",permalink:"/espresso/hands-on/GaAs",draft:!1,editUrl:"https://github.com/pranabdas/espresso/blob/main/docs/hands-on/GaAs.md",tags:[],version:"current",frontMatter:{title:"Bandstructure of GaAs",sidebar_label:"GaAs"},sidebar:"docs",previous:{title:"Graphene",permalink:"/espresso/hands-on/graphene"},next:{title:"Fe (magnetic)",permalink:"/espresso/hands-on/fe"}},u={},p=[],f={toc:p},d="wrapper";function m(e){var t=e.components,i=(0,a.Z)(e,s);return(0,o.kt)(d,(0,r.Z)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Now that we have calculated the bandstructure of silicon (semiconductor) and\naluminum (metal), let us proceed with a compound which has two different atoms.\nWe follow the steps like before:"),(0,o.kt)("p",null,"First check the lattice constant with cell relaxation according to our chosen\npseudo potential. We use that lattice constant in our next steps.  Our lattice\nconstant = 10.6867 * 0.508176602 / 0.5 = 10.861462."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x < pw.relax.GaAs.in > pw.relax.GaAs.out\n")),(0,o.kt)("p",null,"Perform self consistent field calculation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x < pw.scf.GaAs.in > pw.scf.GaAs.out\n")),(0,o.kt)("p",null,"Give denser k-points and perform non-self consistent calculation. This step is\nonly necessary if you need to obtain density of states."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x < pw.nscf.GaAs.in > pw.nscf.GaAs.out\n")),(0,o.kt)("p",null,"Perform ",(0,o.kt)("inlineCode",{parentName:"p"},"bands")," calculation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x < pw.bands.GaAs.in > pw.bands.GaAs.out\n")),(0,o.kt)("p",null,"Post process the data and plot the bandstructure."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bands.x < pp.bands.GaAs.in > pp.bands.GaAs.out\n")),(0,o.kt)("p",null,"If everything goes well, you will get the bandstructure as below:"),(0,o.kt)("picture",null,(0,o.kt)("source",{type:"image/webp",srcSet:n(3405).Z}),(0,o.kt)("img",{src:n(8031).Z,alt:"GaAs-bands"})),(0,o.kt)("admonition",{title:"Warning",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Sometimes a calculation with the same inputs converges in one computer, while\nfails in another due to library configuration or even due to floating point\napproximations. The final output numbers will always vary slightly for different\nmachines, or even among different runs in the same machine. Also check the\nQuantum Espresso version for reproducibility.")),(0,o.kt)("p",null,"Also see the bandstructure of GaAs with ",(0,o.kt)("a",{parentName:"p",href:"soc#soc-calculation-for-gaas"},"SOC"),"."))}m.isMDXComponent=!0},8031:function(e,t,n){t.Z=n.p+"assets/images/GaAs-bands-3a34f0ae96238317bb703f4c913e41d5.png"},3405:function(e,t,n){t.Z=n.p+"assets/images/GaAs-bands-b658e9b11ba890636e2709eb390ef959.webp"}}]);